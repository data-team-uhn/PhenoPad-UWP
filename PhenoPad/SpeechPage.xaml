<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="PhenoPad.SpeechPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhenoPad"
    xmlns:customcontrol="using:PhenoPad.CustomControl"
    xmlns:phenotypeservice="using:PhenoPad.PhenotypeService"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d">


    <Page.Transitions>
        <TransitionCollection>
            <EntranceThemeTransition FromVerticalOffset="0"/>
        </TransitionCollection>
    </Page.Transitions>
    
    <Page.Resources>
        <local:BackgroundColorConverter x:Key="bcConverter" />
        <local:IntervalDisplayConverter x:Key="intervalConverter" />
        <Flyout x:Key="EditPanelFlyout" Placement="Top">
        </Flyout>
    </Page.Resources>

    
    
    <Grid x:Name="root" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="12,10,12,12">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        
        <local:ChatListView x:Name="chatView" Grid.Row="0" Grid.Column="0"
                            IncrementalLoadingThreshold="2" Margin="10" 
                            BorderBrush="White" BorderThickness="2"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <!--" ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView" VerticalAlignment="Bottom"/-->
                    <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView"  VerticalAlignment="Bottom"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemContainerTransitions>
                <TransitionCollection/>
            </ListView.ItemContainerTransitions>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="local:TextMessage">
                    <Grid Margin="6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        
                        <!--Finalized message color-->
                        <Grid
                            Grid.Row="0"
                            Grid.Column="{Binding TextColumn}"
                            MinWidth="300"
                            MaxWidth="700"
                            CornerRadius="10"
                            Background="{Binding Converter={StaticResource bcConverter}}"
                            Visibility="{x:Bind Path=IsFinal}"/>

                        <!--Not finalized message color-->
                            <Grid
                            Grid.Row="0"
                            CornerRadius="10"
                            Grid.Column="{Binding TextColumn}"
                            Background="{StaticResource Background_Temp}"
                            Visibility="{x:Bind Path=IsNotFinal}"/>
                        
                        <Grid
                            Grid.Row="0"
                            Grid.Column="{Binding TextColumn}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <!--<RowDefinition Height="Auto"/>-->
                            </Grid.RowDefinitions>

                            <TextBlock
                                Text="{x:Bind Body}"
                                Grid.Row="0"
                                Grid.Column="0"
                                TextWrapping="Wrap"
                                MinWidth="300"
                                MaxWidth="700"
                                FontSize="18"
                                Padding="10"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                DoubleTapped="TextBlockDoubleTapped"
                                Tapped="TextBlockTapped"
                                Foreground="Black"/>

                            <TextBox 
                                Grid.Row="0"
                                Grid.Column="0"
                                TextWrapping="Wrap"
                                PlaceholderText="{x:Bind Body}"
                                Visibility="Collapsed"
                                MinWidth="300"
                                MaxWidth="700"
                                FontSize="18"
                                Padding="10"/>


                            <Grid Grid.Row="2" 
                                    Background="Transparent"
                                    HorizontalAlignment="Stretch">
                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="40"/>
                                    <ColumnDefinition Width="40"/>

                                </Grid.ColumnDefinitions>
                            
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    Grid.Column="0"
                                    FontSize="12"
                                    Text="{Binding Converter={StaticResource intervalConverter}}"
                                    TextWrapping="Wrap"
                                    Padding="3" 
                                    VerticalAlignment="Center"
                                    Foreground="Black"
                                />
                                <Button Grid.Column="1" Background="Transparent" Style="{StaticResource ButtonStyle1}"
                                        Click="MessageAudioButtonClick">
                                    <SymbolIcon Symbol="Audio"/>
                                </Button>
                                <TextBlock Grid.Column="2" Text="{x:Bind numPhenotype}" 
                                           HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Grid>
                            
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </local:ChatListView>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="6*"/>
            </Grid.RowDefinitions>
            <!--All phenotypes found within the speech-->
            <Grid Name="QuickView1" Grid.Row ="0" BorderBrush="#EEEEEE" BorderThickness="2,2,2,2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Margin="10 0 0 0" Foreground="{StaticResource Button_Background}">Phenotypes in Speech:</TextBlock>
                <ListView x:Name="candidatePhenoListView" Grid.Row="1" ItemsSource="{x:Bind PhenoMana.phenotypesCandidates, Mode=OneWay}">

                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="phenotypeservice:Phenotype">
                            <customcontrol:PhenotypeControl phenotypeName="{x:Bind name}" 
                                                            phenotypeId="{x:Bind hpId}" 
                                                            phenotypeState="{x:Bind state}" 
                                                            sourceType="Speech"></customcontrol:PhenotypeControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Padding" Value="5,0,0,0" />
                            <Setter Property="MinHeight" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>
            </Grid>
            <Grid Name="SpeechBubblePheno" Grid.Row="1" BorderBrush="#EEEEEE" BorderThickness="2,2,2,2" Margin="0 20 0 0">
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                
                <TextBlock Grid.Row="0" Margin="10 0 0 0" 
                           Foreground="{StaticResource Button_Background}">Phenotypes in this line:</TextBlock>
                <ListView x:Name="speechPhenoListView" Grid.Row="1">

                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="phenotypeservice:Phenotype">
                            <customcontrol:PhenotypeControl phenotypeName="{x:Bind name}" 
                                                            phenotypeId="{x:Bind hpId}" 
                                                            phenotypeState="{x:Bind state}" 
                                                            sourceType="Speech"></customcontrol:PhenotypeControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Padding" Value="5,0,0,0" />
                            <Setter Property="MinHeight" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>

            </Grid>

            

            
        </Grid>
        
        <!-- To allow doctor to identify "himself"-->
        <Grid  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="6*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Column="0" Padding="5,3,3,3">
                <TextBlock x:Name="speakerTxt"  Text="Select Doctor: " 
                    Margin="0" 
                    Padding="5,5,5,1"/>
                <ComboBox x:Name="speakerBox" 
                          SelectionChanged="speakerBox_SelectionChanged"
                          SelectedIndex="0">

                    <ComboBox.Resources>
                        <SolidColorBrush x:Key="SystemColors.HighlightBrushKey">Transparent</SolidColorBrush>
                        <SolidColorBrush x:Key="SystemColors.ControlBrushKey">Transparent</SolidColorBrush>
                        <!--<SolidColorBrush x:Key="{local SystemColors.HighlightBrushKey}" Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />-->
                    </ComboBox.Resources>
                    
                    <ComboBoxItem
                        Content="Speaker 1"
                        Background="{StaticResource Background_0}"/>
                    
                    <!-- Add if we want to start with 2 speakers-->
                    <ComboBoxItem
                        Content="Speaker 2"
                        Background="{StaticResource Background_1}"/>
                    
                </ComboBox>
                <TextBlock x:Name="speakerNumTxt" Text="Number of Speakers: "
                           Margin="0"
                           Padding="5,5,5,1"/>
                <TextBox x:Name="numSpeakerBox" IsReadOnly="True" Text="2" MaxHeight="1" VerticalAlignment="Top"/>
                <StackPanel Orientation="Vertical">
                    <Button x:Name="addSpeakerBtn" Content="+" 
                            Click="addSpeakerBtn_Click"
                            Margin="0" Height="15" Width="20" Padding="-2"
                            IsEnabled="False"/>
                    <Button x:Name="removeSpeakerBtn" Content="-" 
                            Click="removeSpeakerBtn_Click"
                            Margin="0" Height="18" Width="20" Padding="0, -6, 0 -2"
                            IsEnabled="False"/>
                </StackPanel>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="1" Padding="5,3,3,3"
                        Width="auto"
                        HorizontalAlignment="Left">
                <TextBlock x:Name="mediaText"  Text="Recorded Audio" 
                    Margin="5" 
                    Padding="5,5,5,1"
                    Visibility="Collapsed"/>
                <ComboBox x:Name="AudioDropdownList" Header="Recorded Audio" Width="auto" 
                          PlaceholderText="Select Audio"
                          SelectionChanged="AudioDropdownList_SelectionChanged"/>
                <MediaPlayerElement x:Name="_mediaPlayerElement" 
                                    AreTransportControlsEnabled="True" 
                                    Margin="5"
                                    HorizontalAlignment="Stretch"  Visibility="Collapsed" 
                                    Height="Auto" Width="Auto"/>
            </StackPanel>

        </Grid>

        <Canvas x:Name="popupcanvas">
            <!--<Grid x:Name="PhenotypePopup" Visibility="Collapsed" CornerRadius="10"
                        Height="auto" Width="auto">
            </Grid>-->
            <Grid x:Name="ChatEditPopup" Visibility="Collapsed" Padding="3" >
                <RichEditBox Name="TranscriptEditBox" LostFocus="EditBoxLostFocus"/>
            </Grid>

        </Canvas>
    </Grid>
    
</Page>
