<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
    x:Class="PhenoPad.SpeechPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhenoPad"
    xmlns:customcontorl="using:PhenoPad.CustomContorl"
    xmlns:phenotypeservice="using:PhenoPad.PhenotypeService"
    xmlns:styles="using:PhenoPad.Styles"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">


    <Page.Transitions>
        <TransitionCollection>
            <EntranceThemeTransition/>
        </TransitionCollection>
    </Page.Transitions>
    
    <Page.Resources>
        <local:BackgroundColorConverter x:Key="bcConverter" />
        <local:IntervalDisplayConverter x:Key="intervalConverter" />
        
    </Page.Resources>

    

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="12,10,12,12">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="300"/>
        </Grid.ColumnDefinitions>
        <!--<StackPanel Grid.Row="0">
            <TextBlock Text="Speech:" Style="{StaticResource SampleHeaderTextStyle}"/>
        </StackPanel>-->


        <local:ChatListView x:Name="chatView" Grid.Row="0" Grid.Column="0"
                            IncrementalLoadingThreshold="2" Margin="10" 
                            BorderBrush="White" BorderThickness="2"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden">
            <ListView.ItemsPanel>
                <ItemsPanelTemplate>
                    <!--" ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView" VerticalAlignment="Bottom"/-->
                    <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView"  VerticalAlignment="Bottom"/>
                </ItemsPanelTemplate>
            </ListView.ItemsPanel>

            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                </Style>
            </ListView.ItemContainerStyle>

            <ListView.ItemContainerTransitions>
                <TransitionCollection/>
            </ListView.ItemContainerTransitions>

            <ListView.ItemTemplate>
                <DataTemplate x:DataType="local:TextMessage">
                    <Grid Margin="6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!--
                        
                        <Polygon
                            Grid.Row="1"
                            Grid.Column="{Binding TextColumn}"
                            Fill="{Binding Converter={StaticResource bcConverter}}"
                            HorizontalAlignment="Left"
                            Points="0,0 0,18 18,18"
                            Visibility="{x:Bind OnLeft}"
                            Margin="0,0,10,0">
                        </Polygon>

                        
                        <Polygon
                            Grid.Row="1"
                            Grid.Column="{Binding TextColumn}"
                            Fill="{Binding Converter={StaticResource bcConverter}}"
                            HorizontalAlignment="Right"
                            Points="18,0 18,18 0,18"
                            Visibility="{x:Bind OnRight}"
                            Margin="0,0,10,0"/>
                        -->
                        
                        <!--Finalized message color-->
                        <Grid
                            Grid.Row="0"
                            Grid.Column="{Binding TextColumn}"
                            Background="{Binding Converter={StaticResource bcConverter}}"
                            Visibility="{x:Bind Path=IsFinal}"/>

                        <!--Not finalized message color-->
                        <Grid
                            Grid.Row="0"
                            Grid.Column="{Binding TextColumn}"
                            Background="{StaticResource Background_Temp}"
                            Visibility="{x:Bind Path=IsNotFinal}"/>

                        <Grid
                            Grid.Row="0"
                            Grid.Column="{Binding TextColumn}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock
                                Text="{x:Bind Body}"
                                Grid.Row="0"
                                Grid.Column="0"
                                TextWrapping="Wrap"
                                MinWidth="300"
                                MaxWidth="500"
                                FontSize="18"
                                Padding="3"
                                VerticalAlignment="Center"
                                Foreground="WhiteSmoke"/>

                            <Button Grid.Row="1" 
                                    Background="Transparent"
                                    HorizontalAlignment="Stretch"
                                    Click="MessageButtonClick">
                                <TextBlock
                                    FontSize="14"
                                    Text="{Binding Converter={StaticResource intervalConverter}}"
                                    TextWrapping="Wrap"
                                    Padding="3" 
                                    Foreground="WhiteSmoke"
                                />
                            </Button>
                        </Grid>

                        <ListView x:Name="phenoFromConversationListView" 
                                    Grid.Column="{Binding PhenoColumn}"
                                    Grid.Row="0"
                                    Padding="6"
                                    ItemsSource="{Binding phenotypesInText}">
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="phenotypeservice:Phenotype">
                                    <customcontorl:PhenotypeControl phenotypeName="{x:Bind name}" 
                                                                    phenotypeId="{x:Bind hpId}" 
                                                                    phenotypeState="{x:Bind state}"
                                                                    sourceType="Speech"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>

                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </local:ChatListView>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="4*"/>
                <RowDefinition Height="6*"/>
            </Grid.RowDefinitions>

            <Grid Name="QuickView1" BorderBrush="#EEEEEE" BorderThickness="2,2,2,2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Margin="10 0 0 0" Foreground="{x:Bind styles:MyColors.PHENOTYPE_BLUE}">Are you looking for:</TextBlock>
                <ListView x:Name="candidatePhenoListView" Grid.Row="1" ItemsSource="{x:Bind PhenoMana.phenotypesCandidates, Mode=OneWay}">

                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="phenotypeservice:Phenotype">
                            <customcontorl:PhenotypeControl phenotypeName="{x:Bind name}" phenotypeId="{x:Bind hpId}" phenotypeState="{x:Bind state}" sourceType="Speech"></customcontorl:PhenotypeControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Padding" Value="5,0,0,0" />
                            <Setter Property="MinHeight" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>
            </Grid>

            <local:ChatListView x:Name="realtimeChatView" Grid.Row="1" Grid.Column="0" 
                            IncrementalLoadingThreshold="2" Margin="2" 
                            BorderBrush="LightGray" BorderThickness="2"
                            ScrollViewer.VerticalScrollBarVisibility="Hidden">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <ItemsStackPanel ItemsUpdatingScrollMode="KeepLastItemInView" VerticalAlignment="Bottom"  HorizontalAlignment="Right"/>
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemContainerTransitions>
                    <TransitionCollection/>
                </ListView.ItemContainerTransitions>

                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="local:TextMessage">
                        <Grid Margin="6">

                            <!--Right/Bottom polygon-->
                            <!--<Polygon
                            Grid.Row="1"
                            Fill="LightSlateGray"
                            HorizontalAlignment="Right"
                            Points="0,0 18,0 18,18"
                            Visibility="Visible"
                            Margin="0,0,10,0"/>-->

                            <!--Message color-->
                            <Grid
                            Grid.Row="0"
                            Background="LightSlateGray"/>

                            <Grid
                            Grid.Row="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <TextBlock 
                                Text="{x:Bind Body}"
                                Grid.Row="0"
                                Grid.Column="0"
                                TextWrapping="Wrap"
                                MinWidth="90"
                                MaxWidth="500"
                                FontSize="18"
                                Padding="3"
                                VerticalAlignment="Center"
                                Foreground="WhiteSmoke"/>

                                <TextBlock
                                Grid.Row="1"
                                FontSize="14"
                                Text="{Binding Converter={StaticResource intervalConverter}}"
                                TextWrapping="Wrap"
                                Opacity="0.7"
                                Padding="3" 
                                Foreground="WhiteSmoke"/>
                            </Grid>

                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </local:ChatListView>
            
        </Grid>
        

        <!-- To allow doctor to identify "himself"-->
        <Grid  Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Column="0" Padding="5,3,3,3">
                <TextBlock x:Name="speakerTxt"  Text="Select Doctor: " 
                    Margin="0" 
                    Padding="5,5,5,1"/>
                <ComboBox x:Name="speakerBox" 
                          SelectionChanged="speakerBox_SelectionChanged"
                          SelectedIndex="0">
                    <ComboBoxItem
                        Content="Speaker 1"
                        Background="{StaticResource Background_0}"/>
                </ComboBox>
                
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="1" Padding="5,3,3,3"
                        HorizontalAlignment="Center">
                <TextBlock x:Name="mediaText"  Text="Recorded Audio" 
                    Margin="0" 
                    Padding="5,5,5,1"
                           Visibility="Collapsed"/>
                <MediaPlayerElement x:Name="_mediaPlayerElement" 
                                    AreTransportControlsEnabled="True" 
                                    HorizontalAlignment="Stretch"  Grid.Column="1"
                                Visibility="Collapsed" Height="96" Width="863"
                                    />
            </StackPanel>
            <!--<Grid
                Grid.Column="1">
                <Border Padding="25,3,15,3"
                        Background="{StaticResource Background_Temp}"
                        HorizontalAlignment="Right">
                    <TextBlock x:Name="tempSentenceTextBlock"
                            Text="Temp text"
                            Grid.Row="0"
                            Grid.Column="0"
                            TextWrapping="Wrap"
                            FontSize="14"
                            VerticalAlignment="Center"
                            Foreground="WhiteSmoke"
                            Visibility="Collapsed"
                            />
                </Border>
            </Grid>-->

        </Grid>
    </Grid>
</Page>
