<UserControl
    x:Class="PhenoPad.CustomControl.NotePageControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhenoPad.CustomControl"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:customcontrol="using:PhenoPad.CustomControl"
    xmlns:phenotypeservice="using:PhenoPad.PhenotypeService"

     xmlns:hwrservice="using:PhenoPad.HWRService"
    xmlns:fileservice="using:PhenoPad.FileService"
    mc:Ignorable="d"
    VerticalAlignment="Stretch" 
    HorizontalAlignment="Stretch"
    Loaded="Page_Loaded">
    <UserControl.Resources>
        <ResourceDictionary>
            <Flyout x:Key="PhenotypeSelectionFlyout" Placement="Bottom"  Closed="PhenotypeSelectionFlyoutClosed">
            <StackPanel>
                <TextBox Name="recognizedResultTextBlock" KeyDown="recognizedResultTextBlock_KeyDown" GotFocus ="recognizedResultTextBlock_GotFocus" SelectionChanged="recognizedResultTextBlock_SelectionChanged"></TextBox>

                <!--
                <ListView x:Name="recognizedResultListView" ItemsSource="{x:Bind recognizedText}" 
                          ScrollViewer.VerticalScrollMode="Disabled" 
                          ScrollViewer.HorizontalScrollMode="Enabled" 
                          ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                          ScrollViewer.IsHorizontalRailEnabled="True">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="hwrservice:HWRRecognizedText">
                            <ComboBox SelectedValue="{x:Bind selectedCandidate, Mode=TwoWay}"
                                      SelectedValuePath="selectedCandidate"
                                      ItemsSource="{x:Bind candidateList}" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                -->
                <!--
                <ListView x:Name="recognizedCandidateListView" ItemsSource="{x:Bind recognizedText}" Margin="0, 10">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="hwrservice:HWRRecognizedText">
                -->
                <ListView x:Name="candidateListView" Visibility="Collapsed" 
                          Margin="0, 10" ScrollViewer.VerticalScrollMode="Disabled" 
                          ScrollViewer.HorizontalScrollMode="Enabled"
                          ScrollViewer.HorizontalScrollBarVisibility="Auto" 
                          ScrollViewer.IsHorizontalRailEnabled="True"
                          >
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"  Padding="0"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Button Padding="0" Click="candidateListViewButton_Click">
                                <TextBlock Text="{Binding}"/>
                            </Button>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,5,0" />
                            <Setter Property="Padding" Value="0,0,0,0" />
                            <Setter Property="MinHeight" Value="20" />
                            <Setter Property="MinWidth" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
                <!--
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Padding" Value="0,0,0,0" />
                            <Setter Property="MinHeight" Value="20" />
                            <Setter Property="MinWidth" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
                -->
                <RelativePanel  Height="300">
                    <ListView x:Name="recognizedPhenoListView"  Height="300" HorizontalAlignment="Stretch" Visibility="Collapsed">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="phenotypeservice:Phenotype">
                                <local:PhenotypeControl phenotypeName="{x:Bind name}" phenotypeId="{x:Bind hpId}" phenotypeState="{x:Bind state}" sourceType="Notes"></local:PhenotypeControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Margin" Value="0,0,0,0" />
                                <Setter Property="Padding" Value="0,0,0,0" />
                                <Setter Property="MinHeight" Value="20" />
                                <Setter Property="MinWidth" Value="200" />
                                    <Setter Property="MaxWidth" Value="400" />
                                </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                        <ProgressRing x:Name="phenoProgressRing" Height="100" Width="100" IsActive="True" RelativePanel.AlignHorizontalCenterWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True"/>
                </RelativePanel>
            </StackPanel>
            </Flyout>
            <Flyout x:Key="ChangeAlternativeFlyout" Placement="Top">
                <StackPanel Padding="0">
                    <ListView x:Name="alternativeListView"  Margin="0, 10" IsItemClickEnabled="True"
                              ItemClick="alternativeListView_ItemClick">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Margin" Value="0,0,0,0" />
                                <Setter Property="Padding" Value="0,0,0,0" />
                                <Setter Property="MinHeight" Value="20" />
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </StackPanel>
            </Flyout>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <ScrollViewer Name="sideScrollView" Visibility="Collapsed" ViewChanged="ScrollView_ViewChanged" VerticalScrollBarVisibility="Hidden" >
            <Grid Padding="0 100 0 0">
            <Canvas  Height="{x:Bind PAGE_HEIGHT}" Name="sideCanvas">

                
            </Canvas>
            </Grid>
        </ScrollViewer>
        
        <ScrollViewer Grid.Column="1"  x:Name="scrollViewer" 
                          RelativePanel.AlignRightWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignBottomWithPanel="True"
                          RelativePanel.AlignTopWithPanel="True"
                          ZoomMode="Enabled" 
                          MinZoomFactor="0.3" 
                          VerticalScrollMode="Enabled" 
                          VerticalScrollBarVisibility="Auto" 
                          HorizontalScrollMode="Enabled" 
                          HorizontalScrollBarVisibility="Auto"
                      
                   ViewChanged="ScrollView_ViewChanged" 
                     
                      >
            <!--
            <Grid x:Name="outputGrid" Background="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" Height="{Binding Path=ViewportHeight, ElementName=scrollViewer}" Width="{Binding Path=ViewportWidth, ElementName=scrollViewer}">
            -->
            <Grid x:Name="outputGrid" Padding="0 100 0 0" Background="{ThemeResource SystemControlBackgroundChromeWhiteBrush}" Height="{x:Bind PAGE_HEIGHT}" Width="{x:Bind PAGE_WIDTH}">
                <!-- Inking area -->

                <Canvas x:Name="backgroundCanvas" >
                    
                </Canvas>
                
                <Grid x:Name="textEditGrid" Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <RichEditBox Style="{StaticResource MyRichEditBoxStyle}" Background="Transparent" x:Name="textNoteEditBox" TextChanged="TextNoteEdit_TextChanged" BorderThickness="0">
                    </RichEditBox>
                </Grid>

                <!-- Note taking ink canvas -->
                <InkCanvas  x:Name="inkCanvas"/>
                
                <!-- pop up after selection-->
                <Canvas x:Name="selectionCanvas">
                    <RelativePanel x:Name="PopupCommandBar" MinWidth="60" Height="30"  Visibility="Collapsed">
                        <Button Foreground="PaleVioletRed" Click="PopupDeleteButton_Click" Background="WhiteSmoke" Padding="0" RelativePanel.AlignLeftWithPanel="True">
                            
                                <SymbolIcon Symbol="Delete" Height="30" Width="30"></SymbolIcon>
                                
                           
                        </Button>
                        <!--
                        <Button Background="WhiteSmoke" Padding="0" RelativePanel.AlignRightWithPanel="True"  Click="MoreSymbolIcon_Click">
                            <SymbolIcon Symbol="More" Height="30" Width="30"></SymbolIcon>
                        </Button>
                        -->
                    </RelativePanel>
                    <RelativePanel x:Name="recognizedPhenoBriefPanel" Height="200" Visibility="Collapsed"  Background="WhiteSmoke" BorderThickness="1" BorderBrush="Gray">
                        <ListView x:Name="recognizedPhenoBriefListView" Height="200" HorizontalAlignment="Stretch" Visibility="Collapsed">
                            <ListView.ItemTemplate>
                                <DataTemplate x:DataType="phenotypeservice:Phenotype">
                                    <local:PhenotypeControl Padding="0" phenotypeName="{x:Bind name}" phenotypeId="{x:Bind hpId}" phenotypeState="{x:Bind state}" sourceType="Notes"></local:PhenotypeControl>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Margin" Value="0,0,0,0" />
                                    <Setter Property="Padding" Value="5,0,10,0" />
                                    <Setter Property="MinHeight" Value="20" />
                                </Style>
                            </ListView.ItemContainerStyle>
                        </ListView>
                        <ProgressRing x:Name="breifPhenoProgressBar" Height="100" Width="200"  IsActive="True" RelativePanel.AlignHorizontalCenterWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True"></ProgressRing>
                    </RelativePanel>

                    <Rectangle StrokeDashArray="2 2"  Name="selectionRectangle" Stroke="DarkBlue" StrokeThickness="2"></Rectangle>
                </Canvas>
               
                <!-- Add in control panel -->
                <Canvas x:Name="userControlCanvas" >
                   
                   <!--
                    <StackPanel Name="HoverPhenoPanel" BorderBrush="Black" PointerEntered="HoverPhenoPanel_PointerEntered" PointerExited="HoverPhenoPanel_PointerExited" Orientation="Horizontal" FlowDirection="RightToLeft" Background="SkyBlue" Padding="5 3" Opacity="0.5" HorizontalAlignment="Right" Visibility="Collapsed">
                        <TextBlock Name="HoverPhenoPopupText" Height="{Binding LINE_HEIGHT}" Text="" FontSize="14" Foreground="OrangeRed"></TextBlock>
                    </StackPanel>
                    -->
                </Canvas>

                <Canvas x:Name="recognizedTextCanvas">
                   

                </Canvas>
                <!-- Current line result -->
                <Canvas >
                    <Grid Name="curLineResultPanel" Visibility="Collapsed" Background="WhiteSmoke" Opacity="0.96" BorderThickness="1" BorderBrush="DarkGray">
                        <Grid.Resources>
                            <Storyboard x:Name="curWordPhenoAnimation">

                                <RepositionThemeAnimation 
                                        Storyboard.TargetName="curWordPhenoControlGrid"
                                        FromVerticalOffset="100"
                                         Duration="0:0:1"/>
                            </Storyboard>
                            <Storyboard x:Name="curWordPhenoHideAnimation">

                                <RepositionThemeAnimation 
                                        Storyboard.TargetName="curWordPhenoControlGrid"
                                        FromVerticalOffset="-100"
                                         Duration="0:0:1"/>
                            </Storyboard>
                        </Grid.Resources>
                        <Grid x:Name="curWordPhenoControlGrid" Height="40" HorizontalAlignment="Right" Background="WhiteSmoke"  Padding="5" BorderBrush="LightGray" BorderThickness="0" >
                            <!--
                                <customcontrol:PhenotypeControl   x:Name="curWordPhenoControl"  phenotypeName="" phenotypeId="" phenotypeState="-1" sourceType="Notes"></customcontrol:PhenotypeControl>
                                -->
                            <ListView  Padding="0 0 0 0" IsItemClickEnabled="False"
                                      ScrollViewer.HorizontalScrollMode="Enabled"
                                      ScrollViewer.VerticalScrollMode="Disabled"
                                      ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                      ScrollViewer.IsHorizontalRailEnabled="True"
                                      x:Name="curLineCandidatePhenoListView" ItemsSource="{x:Bind curLineCandidatePheno, Mode=OneWay}">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel  Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate x:DataType="phenotypeservice:Phenotype">
                                        <customcontrol:PhenotypeBriefControl phenotypeName="{x:Bind name}" phenotypeId="{x:Bind hpId}" phenotypeState="{x:Bind state}" sourceType="{x:Bind sourceType}" presentPosition="Inline" ></customcontrol:PhenotypeBriefControl>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">

                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                        <Setter Property="Margin" Value="5,0,5,0" />
                                        <Setter Property="Padding" Value="0,0,0,0" />
                                        <Setter Property="MinHeight" Value="20" />
                                        <Setter Property="MinWidth" Value="20" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewItem">
                                                    <ListViewItemPresenter CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                       ContentMargin="{TemplateBinding Padding}"
                                       CheckMode="{ThemeResource ListViewItemCheckMode}"
                                       ContentTransitions="{TemplateBinding ContentTransitions}"
                                       CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                       DragForeground="{ThemeResource ListViewItemDragForeground}"
                                       DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                       DragBackground="{ThemeResource ListViewItemDragBackground}"
                                       DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                       FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                                       FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                                       FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                       FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                       FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                                       FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                       FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Control.IsTemplateFocusTarget="True"
                                       PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                       PressedBackground="{StaticResource Button_Background}"
                                       PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                       PointerOverBackground="{StaticResource Button_Background}"
                                       ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                       SelectedPressedBackground="{StaticResource Button_Background}"
                                       SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}"
                                       SelectedForeground="LightBlue"
                                       SelectedPointerOverBackground="{StaticResource Button_Background}"
                                       SelectedBackground="WhiteSmoke"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                        </Grid>
                        <StackPanel Orientation="Horizontal" Background="WhiteSmoke" >
                            <!-- recongtion result of current line -->
                            <StackPanel Name="curLineWordsStackPanel" Orientation="Horizontal" Spacing="5" Padding="5 0 5 0"></StackPanel>
                            <ListView Visibility="Collapsed" Padding="5 0 0 0" Height="{x:Bind LINE_HEIGHT}"
                              ScrollViewer.HorizontalScrollMode="Enabled"
                              ScrollViewer.VerticalScrollMode="Disabled"
                              ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                              ScrollViewer.IsHorizontalRailEnabled="True"
                              x:Name="curLineWordsListView"
                                      IsItemClickEnabled="True"
                              ItemClick="curLineWordsListView_ItemClick">
                                <ListView.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel  Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListView.ItemsPanel>
                                <ListView.ItemTemplate>
                                    <DataTemplate >
                                        <TextBlock Text="{Binding}" VerticalAlignment="Center"></TextBlock>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                        <Setter Property="Margin" Value="0,0,5,0" />
                                        <Setter Property="Padding" Value="0,0,0,0" />
                                        <Setter Property="MinHeight" Value="20" />
                                        <Setter Property="MinWidth" Value="20" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                            <Button Background="WhiteSmoke" Foreground="PaleVioletRed" Width="{x:Bind LINE_HEIGHT}" Height="{x:Bind LINE_HEIGHT}" Click="curLineResultButtonClick">
                                <SymbolIcon Symbol="Clear"></SymbolIcon>
                            </Button>
                        </StackPanel>
                    </Grid>

                </Canvas>
            </Grid>
        </ScrollViewer>

        <Grid Name="addinBase" Grid.Column="0" Grid.ColumnSpan="2"
              Background="WhiteSmoke" Width="400" HorizontalAlignment="Left">
            <TextBlock VerticalAlignment="Top" Grid.Row="0" HorizontalAlignment="Right"                     
                       FontSize="30" Foreground="Black" Margin="10 10 10 10">Add-in Box</TextBlock>
            <GridView>
                <GridView.ItemTemplate>
                    <DataTemplate x:DataType="fileservice:ImageAndAnnotation">
                        <customcontrol:AddInControl name="{x:Bind name}" notebookId="{x:Bind notebookId}" viewOnly="True" pageId="{x:Bind pageId}"></customcontrol:AddInControl>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>
        </Grid>

        <Button Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Top" 
                Margin="10 10 10 10"
                Click="AddinsButton_Click">
            <SymbolIcon Symbol="Pictures"/>
        </Button>


    </Grid>
</UserControl>
