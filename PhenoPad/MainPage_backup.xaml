<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// This code is licensed under the MIT License (MIT).
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<Page
      x:Class="PhenoPad.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:PhenoPad"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:phenotypeservice="using:PhenoPad.PhenotypeService"
    xmlns:customcontrol="using:PhenoPad.CustomControl"
    xmlns:photovideoservice="using:PhenoPad.PhotoVideoService"
     xmlns:styles="using:PhenoPad.Styles"
   
    xmlns:Uc="using:MyScript.IInk.UIReferenceImplementation.UserControls"
    mc:Ignorable="d"
    Loaded="Page_Loaded">
    <Page.Resources>
        
    </Page.Resources>

    <Grid x:Name="RootGrid" Margin="0 0 0 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="0"/>
            <RowDefinition Height="45"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0"/>
            <RowDefinition MaxHeight="0"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition MaxWidth="300"/>
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="LandscapeState">
                    <VisualState.Setters>
                        <Setter Target="RootGrid.ColumnDefinitions[2].MaxWidth" Value="300"/>
                        <Setter Target="RootGrid.ColumnDefinitions[1].Width" Value="5"/>
                        <Setter Target="RootGrid.RowDefinitions[3].Height" Value="0"/>
                        <Setter Target="RootGrid.RowDefinitions[4].MaxHeight" Value="0"/>
                        <Setter Target="QuickViewGrid.(Grid.Row)" Value="2"/>
                        <Setter Target="QuickViewGrid.(Grid.Column)" Value="2"/>

                        <Setter Target="QuickViewGrid.ColumnDefinitions[0].Width" Value="*"/>
                        <Setter Target="QuickViewGrid.ColumnDefinitions[1].Width" Value="0"/>
                        <Setter Target="QuickViewGrid.ColumnDefinitions[2].Width" Value="0"/>
                        <Setter Target="QuickViewGrid.RowDefinitions[0].Height" Value="*"/>
                        <Setter Target="QuickViewGrid.RowDefinitions[1].Height" Value="*"/>
                        <Setter Target="QuickViewGrid.RowDefinitions[2].Height" Value="*"/>
                        <Setter Target="QuickView1.(Grid.Row)" Value="0"/>
                        <Setter Target="QuickView2.(Grid.Row)" Value="1"/>
                        <Setter Target="QuickView3.(Grid.Row)" Value="2"/>
                        <Setter Target="QuickView1.(Grid.Column)" Value="0"/>
                        <Setter Target="QuickView2.(Grid.Column)" Value="0"/>
                        <Setter Target="QuickView3.(Grid.Column)" Value="0"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PortraitState">
                    <VisualState.Setters>
                        <Setter Target="RootGrid.ColumnDefinitions[2].MaxWidth" Value="0"/>
                        <Setter Target="RootGrid.ColumnDefinitions[1].Width" Value="0"/>
                        <Setter Target="RootGrid.RowDefinitions[3].Height" Value="5"/>
                        <Setter Target="RootGrid.RowDefinitions[4].MaxHeight" Value="300"/>
                        <Setter Target="QuickViewGrid.(Grid.Row)" Value="4"/>
                        <Setter Target="QuickViewGrid.(Grid.Column)" Value="0"/>
                        <Setter Target="QuickViewGrid.RowDefinitions[0].Height" Value="*"/>
                        <Setter Target="QuickViewGrid.RowDefinitions[1].Height" Value="0"/>
                        <Setter Target="QuickViewGrid.RowDefinitions[2].Height" Value="0"/>
                        <Setter Target="QuickViewGrid.ColumnDefinitions[0].Width" Value="*"/>
                        <Setter Target="QuickViewGrid.ColumnDefinitions[1].Width" Value="*"/>
                        <Setter Target="QuickViewGrid.ColumnDefinitions[2].Width" Value="*"/>
                        <Setter Target="QuickView1.(Grid.Row)" Value="0"/>
                        <Setter Target="QuickView2.(Grid.Row)" Value="0"/>
                        <Setter Target="QuickView3.(Grid.Row)" Value="0"/>
                        <Setter Target="QuickView1.(Grid.Column)" Value="0"/>
                        <Setter Target="QuickView2.(Grid.Column)" Value="1"/>
                        <Setter Target="QuickView3.(Grid.Column)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid Grid.Row="0" Grid.ColumnSpan="3" Name="" Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}">
            
        </Grid>
        <Grid Grid.Row="1" Grid.Column="1" Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}"></Grid>
        <Grid Grid.Row="1" Grid.Column="2" Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}"></Grid>
        <Grid Grid.Row="2" Grid.Column="1" Background="#EEEEEE"></Grid>
        <Grid Grid.Row="3" Grid.Column="0" Background="#EEEEEE">
        </Grid>

        <Grid Name="TopMenuRelativePanel" Grid.Row="1" Grid.ColumnSpan="3" Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1050"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1">
                <StackPanel Name="dragableArea">
                <Image Name="logoImage" Source="Assets/Wide310x150Logo.scale-200.png"></Image>
                </StackPanel>
            </Grid>
            <Grid Grid.Column="0" Grid.ColumnSpan="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100"></ColumnDefinition>
                    <ColumnDefinition Width="900"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="120"></ColumnDefinition>
                </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="Note name" VerticalAlignment="Center"></TextBlock>
                <CommandBar Grid.Column="1" HorizontalAlignment="Left" Name="topCmdBar" Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}">
                    <AppBarButton Icon="Page2" Label="Notes"  Click="NotesButton_Click">
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            
                            <MenuFlyoutItem Text="Create new note" Tag="rating"/>
                            <MenuFlyoutItem Text="Save note" Tag="Save note to disk." Click="SaveNote_Click"/>
                            <MenuFlyoutItem Text="Save image" Tag="Save note to image." Click="SaveNoteToImage_Click"/>
                            <MenuFlyoutItem Text="Open saved note" Tag="Open a saved note." Click="LoadNote_Click"/>
                            <MenuFlyoutItem Text="Change a server" Tag="Open a saved note." Click="ChangeServer_Click"/>
                            
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                </AppBarButton>
                <AppBarToggleButton Icon="PreviewLink" Label="Overview" Name="sdf" Click="OverviewButton_Click"/>
                <AppBarToggleButton Icon="Message" Label="Speech" Name="ddd" Click="SpeechButton_Click"/>
                <AppBarSeparator/>
               
                <!--
                <AppBarButton Name="imageButton" Icon="BrowsePhotos" Label="Speech Recognition" Click="LoadImage_Click">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Load a image."/>
                    </ToolTipService.ToolTip>
                </AppBarButton>
                -->
            <AppBarButton  Icon="WebCam" Label="Photo/Video"  >
                <AppBarButton.Flyout>
                    <MenuFlyout>
                        <MenuFlyoutItem Text="Insert a photo from files" Click="LoadImage_Click"  Icon="BrowsePhotos"/>
                        <MenuFlyoutItem Text="Take a photo" Click="TakePhoto_Click" Tag="Take a photo" Icon="Camera"/>
                        <MenuFlyoutItem Text="Record a video" Click="MenuFlyoutItem_Click" Tag="distance" Icon="Video"/>
                         <MenuFlyoutItem Text="Bluetooth" Click="ConnectBluetooth_Click" Icon="Video"/>
                    </MenuFlyout>
                </AppBarButton.Flyout>

                <ToolTipService.ToolTip>
                    <TextBlock Text="Enable video recording"/>
                </ToolTipService.ToolTip>
            </AppBarButton>
            <AppBarToggleButton Name="testButton" Icon="Microphone" Label="Speech Recognition" Click="TestWS_Click">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Enable audio recording"/>
                </ToolTipService.ToolTip>

            </AppBarToggleButton>
            <AppBarButton Name="MyScriptButton" Label="MyScript" Click="MyScriptButton_Click"></AppBarButton>
            <!--
                <AppBarToggleButton Name="" Foreground="LightBlue" Icon="Microphone" Label="Speech Recognition" Click="MicButton_Click">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Use Microsoft speech recognition."/>
                    </ToolTipService.ToolTip>
                </AppBarToggleButton>
               -->

                    <AppBarToggleButton Margin="40 0 0 0" Name="keyboardButton"  Style="{StaticResource MyAppBarToggleButtonStyle}" Icon="Keyboard" Label="Typing" Click="KeyboardButton_Click" IsChecked="False">
                <ToolTipService.ToolTip>
                    <TextBlock Text="Switch to typing."/>
                </ToolTipService.ToolTip>
            </AppBarToggleButton>
                    <AppBarToggleButton Style="{StaticResource MyAppBarToggleButtonStyle}" Name="writeButton" Icon="Edit" Label="Handwrting" Click="WriteButton_Click" IsChecked="True">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="Switch to handwriting."/>
                        </ToolTipService.ToolTip>
                    </AppBarToggleButton>
                    <AppBarSeparator/>
                    <AppBarButton Icon="Bold" x:Name="boldButton"  ToolTipService.ToolTip="Bold" Visibility="Collapsed"/>
                    <AppBarButton x:Name="italicButton" Icon="Italic"     ToolTipService.ToolTip="Italic" Visibility="Collapsed"/>
                    <AppBarButton x:Name="underlineButton" Icon="Underline"  ToolTipService.ToolTip="Underline" Visibility="Collapsed"/>

           
           
            </CommandBar>

                <InkToolbar Grid.Column="2" Margin="-240 0 0 0" Visibility="Visible"  Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}" Name="MainPageInkBar" ActiveToolChanged="CurrentToolChanged" Orientation="Horizontal" ButtonFlyoutPlacement="Bottom" 
                   InitialControls="None">
                <InkToolbar.Resources>
                    <!--
                    <BrushCollection x:Key="CalligraphicPenPalette">
                        <SolidColorBrush>Black</SolidColorBrush>
                        <SolidColorBrush>Brown</SolidColorBrush>
                        <SolidColorBrush>Red</SolidColorBrush>
                        <SolidColorBrush Color="#FFFFCE00"/>
                        <SolidColorBrush Color="#FF26E600"/>
                        <SolidColorBrush Color="#FF004DE6"/>
                    </BrushCollection>
                    <local:CalligraphicPen x:Key="CalligraphicPen"/>
                    <Style TargetType="InkToolbarCustomPenButton">
                        <Setter Property="SelectedStrokeWidth" Value="1"/>
                        <Setter Property="Background" Value="LightBlue"/>
                    </Style>
                    -->
                </InkToolbar.Resources>
                <AppBarToggleButton></AppBarToggleButton>
                    <InkToolbarBallpointPenButton SelectedStrokeWidth="2"  Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}"></InkToolbarBallpointPenButton>
                    <InkToolbarEraserButton Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}"></InkToolbarEraserButton>


                <!--
                <InkToolbarCustomPenButton x:Name="calligraphyPen"  Background="LightBlue"
                                                   CustomPen="{StaticResource CalligraphicPen}"
                                                   Palette="{StaticResource CalligraphicPenPalette}"
                                                   SelectedBrushIndex="2"
                                                   ToolTipService.ToolTip="Calligraphy pen">
                    <Border>
                        <Grid>
                            <TextBlock AutomationProperties.AccessibilityView="Raw" FontFamily="Segoe MDL2 Assets" Text="&#xEDFB;" Canvas.ZIndex="1"/>
                            <TextBlock AutomationProperties.AccessibilityView="Raw" FontFamily="Segoe MDL2 Assets" Text="&#xF0C7;" 
                                                   Foreground="{x:Bind calligraphyPen.SelectedBrush, Mode=OneWay}" Canvas.ZIndex="0"/>
                        </Grid>
                    </Border>
                    <InkToolbarCustomPenButton.ConfigurationContent>
                        <InkToolbarPenConfigurationControl/>
                    </InkToolbarCustomPenButton.ConfigurationContent>
                </InkToolbarCustomPenButton>-->
                    <InkToolbarCustomToggleButton x:Name="toolButtonLasso" Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}" Click="ToolButton_Lasso" ToolTipService.ToolTip="Selection tool">
                    <SymbolIcon Symbol="{x:Bind LassoSelect}"/>
                </InkToolbarCustomToggleButton>
                    <InkToolbarCustomToggleButton x:Name="toggleButton" Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}" Click="Toggle_Custom"  ToolTipService.ToolTip="Touch Writing">
                    <SymbolIcon Symbol="{x:Bind TouchWriting}"/>
                </InkToolbarCustomToggleButton>
            </InkToolbar>


                <CommandBar Grid.Column="3" Background="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}">
                    <AppBarButton Name="FullscreenBtn" Icon="FullScreen" Label="Fullscreen Mode" Click="FullscreenButton_Click">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="Enter full screen mode."/>
                        </ToolTipService.ToolTip>
                    </AppBarButton>
                </CommandBar>

            </Grid>
        </Grid>
        <ContentControl x:Name="PageHost" Grid.Row="2" Grid.Column="0" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
            <ContentControl.ContentTransitions>
                <TransitionCollection>
                    <ContentThemeTransition x:Name="PageHostContentTrans"/>
                </TransitionCollection>
            </ContentControl.ContentTransitions>
        </ContentControl>
        <!--
        <customcontrol:MyScriptTextEditor x:Name="myScriptEditor" Visibility="Collapsed" Grid.Row="2" Grid.Column="0" ></customcontrol:MyScriptTextEditor>
        -->
        <!-- Added Phenotypes-->
        <Grid Name="QuickViewGrid" Grid.Row="2" Grid.Column="2" BorderThickness="0 0 0 0" BorderBrush="{x:Bind styles:MyColors.TITLE_BAR_WHITE_COLOR_BRUSH}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="0"/>
                <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid Name="QuickView1" BorderBrush="#EEEEEE" BorderThickness="2,2,2,2" Grid.Row="0" Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                <TextBlock Grid.Row="0" Margin="10 0 0 0" Foreground="{x:Bind styles:MyColors.PHENOTYPE_BLUE}">Are you looking for:</TextBlock>
                    <ListView x:Name="candidatePhenoListView" Grid.Row="1" ItemsSource="{x:Bind PhenoMana.phenotypesCandidates, Mode=OneWay}">

                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="phenotypeservice:Phenotype">
                                <customcontrol:PhenotypeControl phenotypeName="{x:Bind name}" phenotypeId="{x:Bind hpId}" phenotypeState="{x:Bind state}" sourceType="Notes"></customcontrol:PhenotypeControl>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Margin" Value="0,0,0,0" />
                                <Setter Property="Padding" Value="5,0,0,0" />
                                <Setter Property="MinHeight" Value="20" />
                            </Style>
                        </ListView.ItemContainerStyle>

                    </ListView>
                </Grid>

            <Grid Name="QuickView2" BorderBrush="#EEEEEE" BorderThickness="2,2,2,2"  Grid.Row="1" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"  Margin="10 0 0 0" Foreground="{x:Bind styles:MyColors.PHENOTYPE_BLUE}">Other phenotypes to look at:</TextBlock>
                <ListView x:Name="suggestedPhenoListView" Grid.Row="1" ItemsSource="{x:Bind PhenoMana.suggestedPhenotypes, Mode=OneWay}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="phenotypeservice:Phenotype">
                            <customcontrol:PhenotypeControl phenotypeName="{x:Bind name}" phenotypeId="{x:Bind hpId}" phenotypeState="{x:Bind state}" sourceType="Suggested"></customcontrol:PhenotypeControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Padding" Value="5,0,0,0" />
                            <Setter Property="MinHeight" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>

            <Grid Name="QuickView3" BorderBrush="#EEEEEE" BorderThickness="2,2,2,2"  Grid.Row="2" Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Row="0"  Margin="10 0 0 0" Foreground="{x:Bind styles:MyColors.PHENOTYPE_BLUE}">This patient might have:</TextBlock>
                <ListView x:Name="diseaseListView" Grid.Row="1" ItemsSource="{x:Bind PhenoMana.predictedDiseases}">
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="phenotypeservice:Disease">
                            <TextBlock Text="{x:Bind name}" FontSize="10"></TextBlock>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Margin" Value="0,0,0,0" />
                            <Setter Property="Padding" Value="5,0,0,0" />
                            <Setter Property="MinHeight" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>
        </Grid>
        
        <RelativePanel Name="CmdRelativePanel" Grid.Row="2" Grid.ColumnSpan="2">
            <RelativePanel.Resources>
                <Storyboard x:Name="AddedPhenoGridEnterSB">
                    <FadeInThemeAnimation Storyboard.TargetName="addedPhenoGrid" />
                </Storyboard>
            </RelativePanel.Resources>

            <Border x:Name="StatusBorder" Margin="0,0,0,0" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignHorizontalCenterWithPanel="True" MinWidth="500" Height="40">

                <TextBlock x:Name="StatusBlock" FontWeight="Bold" Foreground="White" TextAlignment="Center"
                                   MaxWidth="{Binding ElementName=Splitter, Path=ActualWidth}" Margin="10,10,10,10" TextWrapping="Wrap"  />
            </Border>
            
             <TextBlock Visibility="Collapsed" Name="pageIndexTextBlock" RelativePanel.Above="cmdBar" RelativePanel.AlignRightWithPanel="True" Text=""/>
            <StackPanel Name="AnnoPhenoStackPanel" RelativePanel.Above="cmdBar" RelativePanel.AlignLeftWithPanel="True" Orientation="Horizontal"/>
            <Grid Background="WhiteSmoke" Name="CameraCanvas" Height="300" Width="530" RelativePanel.Above="pageIndexTextBlock" RelativePanel.AlignRightWithPanel="True" Visibility="Collapsed">
                <photovideoservice:PhotoVideoCaptureControl x:Name="captureControl"></photovideoservice:PhotoVideoCaptureControl>
             
                <StackPanel Height="30" VerticalAlignment="Top" >
                    <Button  Height="30" Width="40" Click="CameraClose_Click">
                        <SymbolIcon Symbol="Clear" ></SymbolIcon>
                    </Button>
                </StackPanel>
                <StackPanel Height="30" VerticalAlignment="Top" HorizontalAlignment="Right" Orientation="Horizontal">

                    <Button Height="30" Width="40" Name="VideoButton" Click="VideoButton_Click" IsEnabled="False">
                        <Grid>
                            <Ellipse x:Name="StartRecordingIcon" Fill="Red" Width="10" Height="10"/>
                            <Rectangle x:Name="StopRecordingIcon" Fill="White" Width="20" Height="20" Visibility="Collapsed"/>
                        </Grid>
                    </Button>
                    <Button Height="30" Width="40" Name="PhotoButton" Click="PhotoButton_Click" Foreground="White">
                        <SymbolIcon Symbol="Camera" />
                    </Button>
                </StackPanel>
            </Grid>
<!--
            <WebView Height="640" Width="800" Source="http://192.168.137.8/html/" RelativePanel.Above="showTextGrid" RelativePanel.AlignRightWithPanel="True"></WebView>
    -->    
            <Grid Height="40" Width="90" Padding="0 0 0 0" Background="WhiteSmoke" Name="showTextGrid" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignRightWithPanel="True">
                <Image  Visibility="Collapsed" Name="printImage" Width="70" Source="Assets/abc_print.png" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.3"/>
                <Image  Name="writeImage" Width="70" Source="Assets/abc_write.png" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.3"/>
            </Grid>
            <Grid Height="40" Padding="0 0 0 0" RelativePanel.AlignBottomWithPanel="True" 
                  Background="WhiteSmoke"
                  RelativePanel.LeftOf="showTextGrid" 
                  RelativePanel.AlignLeftWithPanel="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Foreground="Gray" Padding="10 10 10 10"  Text="Collected Phenotypes:" Name="collectedPhenotypesTB" ></TextBlock>
                <ListView Grid.Column="1"  Height="40" Padding="0 10 0 10" x:Name="savedPhenoListView" ItemsSource="{x:Bind PhenoMana.savedPhenotypes, Mode=OneWay}" 
                           ScrollViewer.VerticalScrollMode="Disabled" ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollMode="Enabled" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.IsHorizontalRailEnabled="True">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"  Padding="0"/>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="phenotypeservice:Phenotype">
                            <customcontrol:PhenotypeControl phenotypeName="{x:Bind name}" phenotypeId="{x:Bind hpId}" phenotypeState="{x:Bind state}" sourceType="Saved"></customcontrol:PhenotypeControl>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Margin" Value="10,0,10,0" />
                            <Setter Property="Padding" Value="0,0,0,0" />
                            <Setter Property="MinHeight" Value="10" />
                            <Setter Property="MinWidth" Value="20" />
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Grid>


            <TextBlock x:Name="modeTextBlock" Margin="0 0 10 0" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignRightWithPanel="True" Padding=" 0 0 10 0" FontSize="25" FontFamily="Segoe UI" FontWeight="ExtraBold" Foreground="LightGray" Opacity="0.5">Handwriting Mode</TextBlock>


            <StackPanel  Name="pageIndexPanel" Orientation="Horizontal" RelativePanel.Above="showTextGrid" RelativePanel.AlignHorizontalCenterWithPanel="True" Padding="0 5 22 0">
                <Button Height="30" Width="30" Padding="0 0 0 0" Background="WhiteSmoke"  Click="AddPageButton_Click">
                    <SymbolIcon Symbol="Add" Foreground="LightBlue" />
                </Button>
            </StackPanel>
            <TextBlock Name="cmdBarTextBlock" Margin="12,14" RelativePanel.AlignLeftWithPanel="True" RelativePanel.Above="showTextGrid"
                               Text=""
                               Visibility="Visible"/>
            <CommandBar RelativePanel.AlignBottomWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        Visibility="Collapsed"
                        Name="cmdBar">
                <!--
                <AppBarToggleButton Name="testButton" Icon="Microphone" Label="Speech Recognition" Click="TestWS_Click">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Enable audio recording"/>
                    </ToolTipService.ToolTip>
                </AppBarToggleButton>

                
                    This is for Microsoft speech recognition engine
                    <AppBarToggleButton Name="micButton" Icon="Microphone" Label="Speech recognition" Click="MicButton_Click" />
                -->

                
                <AppBarButton  Icon="WebCam" Label="Photo/Video"  Click="TakePhoto_Click" >
                    <!--
                    <AppBarButton.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Text="Select a photo" Click="MenuFlyoutItem_Click" Tag="rating" Icon="BrowsePhotos"/>
                            <MenuFlyoutItem Text="Take a photo" Click="TakePhoto_Click" Tag="Take a photo" Icon="Camera"/>
                            <MenuFlyoutItem Text="Record a video" Click="MenuFlyoutItem_Click" Tag="distance" Icon="Video"/>
                        </MenuFlyout>
                    </AppBarButton.Flyout>
                    -->
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Enable video recording"/>
                    </ToolTipService.ToolTip>
                </AppBarButton>
                
                <AppBarSeparator/>

                <AppBarButton Icon="Page2" Label="Notes" Click="NotesButton_Click">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="Write notes"/>
                    </ToolTipService.ToolTip>
                </AppBarButton>

                <AppBarToggleButton Icon="PreviewLink" Label="Collected Phenotypes" Name="OverviewButton" Click="OverviewButton_Click">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="View collected phenotypes"/>
                    </ToolTipService.ToolTip>
                </AppBarToggleButton>

                <AppBarToggleButton Icon="Message" Label="Conversation" Name="SpeechButton" Click="SpeechButton_Click">
                    <ToolTipService.ToolTip>
                        <TextBlock Text="View conversation"/>
                    </ToolTipService.ToolTip>
                </AppBarToggleButton>
                
                <AppBarSeparator/>
                <!--
                <AppBarButton Icon="Message" Label="Speech" Click="PageOverviewButton_Click"/>
                -->
                <AppBarButton Icon="Back" Label="Back" Click="PreviousPageButton_Click"/>
                <AppBarButton Icon="Forward" Label="Forward" Click="NextPageButton_Click"/>
                <AppBarButton Icon="Add" Label=""  Click="AddPageButton_Click"/>
                

                <CommandBar.SecondaryCommands>
                    <AppBarButton Icon="Save" Label="Save notes" Click="SaveNote_Click"/>
                    <AppBarButton Icon="OpenFile" Label="Open notes" Click="LoadNote_Click"/>
                </CommandBar.SecondaryCommands>

            </CommandBar>

            
            
            <Grid Background="White"
                  RelativePanel.Above="cmdBar"
                  RelativePanel.AlignLeftWithPanel="True"
                  RelativePanel.AlignRightWithPanel="True"
                  Name="addedPhenoGrid"
                  Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
               
            </Grid>

            <Grid Background="White"
                  RelativePanel.Above="cmdBar"
                  RelativePanel.AlignLeftWithPanel="True"
                  RelativePanel.AlignRightWithPanel="True"
                  Name="searchPhenoGrid"
                  Visibility="Collapsed">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <TextBox></TextBox>
                    <Button Width="40" Height="40">
                        <SymbolIcon Symbol="Find"></SymbolIcon>
                    </Button>
                </StackPanel>
            </Grid> 
        </RelativePanel>
        <Popup x:Name="OverviewPopUp" HorizontalOffset="0" VerticalOffset="0">
            <local:OverviewPage x:Name="OverivePopUpPage"/>
        </Popup>
        <Popup x:Name="SpeechPopUp" HorizontalOffset="0" VerticalOffset="0">
            <local:SpeechPage x:Name="SpeechPopUpPage"/>
        </Popup>
    </Grid>
</Page>
